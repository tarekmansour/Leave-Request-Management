// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241201112256_Create_Database")]
    partial class Create_Database
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("[varchar](100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("[varchar](100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("[varchar](100)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "mBarry@gmail.com",
                            FirstName = "Michel",
                            LastName = "Barry"
                        },
                        new
                        {
                            Id = 2,
                            Email = "vMajory@gmail.com",
                            FirstName = "Victor",
                            LastName = "Majory"
                        },
                        new
                        {
                            Id = 3,
                            Email = "cGarcia@gmail.com",
                            FirstName = "Christophe",
                            LastName = "Garcia"
                        });
                });

            modelBuilder.Entity("Domain.Entities.LeaveRequest", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("[nvarchar](max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LeaveTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedBy");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LeaveTypeId");

                    b.ToTable("LeaveRequests");
                });

            modelBuilder.Entity("Domain.Entities.LeaveType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("MaxDaysPerYear")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("[varchar](100)");

                    b.HasKey("Id");

                    b.ToTable("LeaveTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MaxDaysPerYear = 30,
                            Name = "Holiday"
                        },
                        new
                        {
                            Id = 2,
                            MaxDaysPerYear = 10,
                            Name = "SickLeave"
                        },
                        new
                        {
                            Id = 3,
                            MaxDaysPerYear = 80,
                            Name = "Maternity"
                        },
                        new
                        {
                            Id = 4,
                            MaxDaysPerYear = 25,
                            Name = "Paternity"
                        },
                        new
                        {
                            Id = 5,
                            MaxDaysPerYear = 4,
                            Name = "MarriageOrPACS"
                        },
                        new
                        {
                            Id = 6,
                            MaxDaysPerYear = 1,
                            Name = "ChildBirth"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Employee", b =>
                {
                    b.OwnsOne("Domain.ValueObjects.EmployeePosition", "Position", b1 =>
                        {
                            b1.Property<int>("EmployeeId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("[varchar](100)")
                                .HasColumnName("Position");

                            b1.HasKey("EmployeeId");

                            b1.ToTable("Employees");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeId");

                            b1.HasData(
                                new
                                {
                                    EmployeeId = 1,
                                    Value = "Manager"
                                },
                                new
                                {
                                    EmployeeId = 2,
                                    Value = "Employee"
                                },
                                new
                                {
                                    EmployeeId = 3,
                                    Value = "Employee"
                                });
                        });

                    b.Navigation("Position")
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.LeaveRequest", b =>
                {
                    b.HasOne("Domain.Entities.Employee", null)
                        .WithMany()
                        .HasForeignKey("ApprovedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_LeaveRequest_Employee_Approval");

                    b.HasOne("Domain.Entities.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_LeaveRequest_Employee");

                    b.HasOne("Domain.Entities.LeaveType", null)
                        .WithMany()
                        .HasForeignKey("LeaveTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_LeaveRequest_LeaveType");

                    b.OwnsOne("Domain.ValueObjects.LeaveRequestStatus", "Status", b1 =>
                        {
                            b1.Property<int>("LeaveRequestId")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("[varchar](50)")
                                .HasColumnName("Status");

                            b1.HasKey("LeaveRequestId");

                            b1.ToTable("LeaveRequests");

                            b1.WithOwner()
                                .HasForeignKey("LeaveRequestId");
                        });

                    b.Navigation("Status")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
